qwpsetup notes:

ATTEMPT TO CURL:

#A_AUTH_KEY=$(sudo curl https://api.wordpress.org/secret-key/1.1/salt/ | grep -w "AUTH_KEY" | awk '{print $2}')
#B_SEC_AUTH_KEY=$(sudo curl https://api.wordpress.org/secret-key/1.1/salt/ | grep -w "SECURE_AUTH_KEY" | awk '{print $2}')
#C_LOG_KEY=$(sudo curl https://api.wordpress.org/secret-key/1.1/salt/ | grep -w "LOGGED_IN_KEY" | awk '{print $2}')
#D_N_KEY=$(sudo curl https://api.wordpress.org/secret-key/1.1/salt/ | grep -w "NONCE_KEY" | awk '{print $2}')
#E_AUTH_SALT=$(sudo curl https://api.wordpress.org/secret-key/1.1/salt/ | grep -w "AUTH_SALT" | awk '{print $2}')
#F_SEC_AUTH_SALT=$(sudo curl https://api.wordpress.org/secret-key/1.1/salt/ | grep -w "SECURE_AUTH_SALT" | awk '{print $2}')
#G_LOG_SALT=$(sudo curl https://api.wordpress.org/secret-key/1.1/salt/ | grep -w "LOGGED_IN_SALT" | awk '{print $2}')
#H_N_SALT=$(sudo curl https://api.wordpress.org/secret-key/1.1/salt/ | grep -w "NONCE_SALT" | awk '{print $2}')

#cat $A_AUTH_KEY
#cat $B_SEC_AUTH_KEY
#cat $C_LOG_KEY
#cat $D_N_KEY
#cat $E_AUTH_SALT
#cat $F_SEC_AUTH_SALT
#cat $G_LOG_SALT
#cat $H_N_SALT

#sed "s/, $PARTITION_COLUMN.*/, 'PINEAPPLE');/"
#https://sed.js.org/
#https://www.baeldung.com/linux/find-replace-text-in-file
#https://www.howtogeek.com/howto/30184/10-ways-to-generate-a-random-password-from-the-command-line/
#https://www.mysqltutorial.org/mysql-show-users/
#https://snipplr.com/view/15626/apache2--enabling-and-disabling-sites
#https://askubuntu.com/questions/629995/apache-not-able-to-restart
#https://askubuntu.com/questions/256013/apache-error-could-not-reliably-determine-the-servers-fully-qualified-domain-n


sudo sed -i 's/#ServerName.*/ServerName '$A_RECORD'/' $WEB_CONFIG #OLD TEST

# CURL WP PAGE FOR SALTS?

#DEBUGGING: 
sudo apt-get purge mysql-server mysql-client mysql-common mysql-server-core-* mysql-client-core-* -y
sudo rm -rf /etc/mysql /var/lib/mysql
sudo apt remove openssl apache2 -y
sudo rm -r /var/www/html/wordpress

sudo apt-get remove --purge apache2

sed -e (-e is to escape characters so thats been fed into a command)

TO DO:
- CNAME CONFIG WITH SED
- POPULATE THE README.MD
- ADD BASE64 ENCODED "Copyright Alex Vergara 2022" and have it echo in front of file
- WRITE VERSION NUM into README.MD
- TEST ON OTHER ENVIRONMENTS

REMOVED:
OUTPUT_1="$(who | awk '{print $1}')"

if [[ -n $OUTPUT_1 ]]
then
	echo " --> Setting owner of non critical WP files to $OUTPUT_1"
	sudo chown $OUTPUT_1:$OUTPUT_1  -R * # Let a useraccount be owner
else
	echo " --> Owner defaulting to current ROOT user (WARNING, BE SURE TO CHANGE THIS!)"
	sudo chown root:root  -R * # If this is overriden it's because the program couldn't find any other user accounts running, so perms were given to root. Be sure to change this!
fi
sudo chown www-data:www-data -R /var/www/html/wordpress # Let apache be owner of wordpress dir

IMPROPER FILE PERMS

type -p curl >/dev/null || sudo apt install curl -y
curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
&& sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
&& echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
&& sudo apt update \
&& sudo apt install gh -y